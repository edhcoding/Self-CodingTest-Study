코딩 테스트 공부하면서 기록하기위한 게시글입니다.

자바스크립트(JS) 정렬 라이브러리
- JavaScript 에서는 배열에 포함된 데이터를 정렬하는 sort() 함수를 제공합니다.
- 최악의 경우 시간 복잡도 O(NlogN)을 보장합니다.
- 알고리즘 및 코딩 테스트 문제를 해결할 때 정렬 기능이 필요하다면, 단순히 sort() 함수를 사용하는 것을 권장합니다.
- 만약, sort() 함수의 사용이 제한된다면, 병합 정렬과 같은 알고리즘을 직접 구현하여 사용해야 합니다.

- 다음과 같은 형태로 사용할 수 있습니다.
- 이때, compareFunction은 정렬 기준을 정해주는 함수입니다.
- 내림 • 오름차순 등 구체적인 정렬 기준을 설정할 수 있습니다.

arr.sort(compareFunction);

JavaScript 정렬 기준 함수(Compare Function)
- JavaScript의 정렬 함수에서는 정렬 기준 함수가 사용됩니다.
- 두 개의 원소 a,b를 입력으로 받습니다.
1. 반환 값이 0보다 작은 경우 => a가 우선순위가 높아, 앞에 위치합니다.
2. 반환 값이 0보다 큰 경우 => b가 우선순위가 높아, 앞에 위치합니다.
3. 반환 값이 0인 경우 => a와 b의 순서를 변경하지 않습니다.

ex) 오름차순 정렬하고 싶다면 a-b를 리턴하도록 만들 수 있습니다. 이 때는 a가 b보다 더 작기 때문에 b가 반환값이 마이너스가 되기 때문에 작은 것이 앞으로 오게 돼서 오름차순 정렬을 수행하는 방식 등으로 사용할 수 있습니다.

정렬 기준 함수(Compare Function) 참고 사항
- 정렬 기준 함수를 사용하지 않으면 각 원소는 문자열로 취급합니다.
- 유니코드 값 순서대로 정렬됩니다.
- 따라서, 항상 정렬 기준 함수를 명시하는 습관을 들일 필요가 있습니다.

저도 공부하면서 문자열 정렬 기능이 있다는 사실은 처음 알아서 예시로 공부해봤습니다.

문자열에 대한 오름차순 정렬 예시
let arr = [
  "fineapple",
  "banana",
  "durian",
  "apple",
  "carrot"
];

arr.sort();
console.log(arr); // ['apple', 'banana', 'carrot', 'durian', 'fineapple']

객체에 대하여 원하는 기준으로 오름차순 정렬 예시
- 성적 점수가 높은 순으로 학생 데이터 나열

let arr = [
    { name: "홍길동", score: 90 },
    { name: "김철수", score: 85 },
    { name: "박영희", score: 97 }
];

function compare(a, b) {
    return b.score - a.score;
}

arr.sort(compare);

console.log(arr);

/** 정답
[
    { name: '박영희', score: 97 },
    { name: '홍길동', score: 90 },
    { name: '김철수', score: 85 }
]
*/

정리
- 코딩 테스트에서 sort를 쓸수만 있다면 병합 정렬을 따로 구현하지 않더라도 시간 복잡도 O(NlogN)을 보장 받을 수 있기 때문에 가능하다면 sort 메서드를 사용을 추천합니다!